#include "mbed.h"
#include <cstdint>
#include <cstdlib>
#include "vesc.h"

// main() runs in its own thread in the OS
Ticker ticker;
DigitalOut led1(PC_9);
DigitalOut led2(PC_10);
int32_t can_baud = 1000000;
CAN can(PB_5,PB_6,can_baud);
CAN can2(PB_8,PB_9,can_baud);
int8_t rece[4];
int32_t speed[4];

int can_id = 80;
vesc _vesc1;

                                


int main()
{   printf("main()\n");
    CANMessage msg;
    _vesc1.vesc_init(&can2, can_baud);
    _vesc1.set_monitor_id(can_id); 
    while (true) {
        if(can.read(msg) && msg.id == 0x036){
            for(int i=0;i<4;i++){
                rece[i] = (int32_t)msg.data[i] - 48;
                if(rece[i]<0){
                    rece[i]=0;
                }}
            for(int j=0; j<4;j++){
                speed[j]=rece[j];
            }
            speed[0] = speed[0]*1000;
            speed[1] = speed[1]*100;
            speed[2] = speed[2]* 10;
            speed[3] = speed[3];
            int equal = speed[0] + speed[1] + speed[2] + speed[3];
            printf("receive: %d\n", equal);
            _vesc1.set_rpm(can_id, equal);
        }
        else{printf("not yet\n");}
        ThisThread::sleep_for(100ms);
    }
}
